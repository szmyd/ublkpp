pipeline {
    agent { label 'sds-builder-v7' }

    environment {
        PROJECT = 'ublkpp'
        ORG = 'oss'
        ARTIFACTORY_PASS = credentials('ARTIFACTORY_PASS')
        HUB_URL = 'hub.tess.io'
        DEV_BRANCH = 'main'
        STABLE_BRANCH = 'stable/*'
        REL_TARGET = '1.0'
    }

    stages {
        stage('Inspect') {
            steps {
                script {
                    COMMIT_SHA = sh(script: "echo ${GIT_COMMIT} | cut -c1-7 | tr -d '\n' | tr -d '\"'", returnStdout: true)
                    VER = sh(script: "grep -m 1 ' version =' conanfile.py | awk '{print \$3}' | tr -d '\n' | tr -d '\"'", returnStdout: true)
                    TAG = sh(script: "echo ${VER}-rc${env.BUILD_NUMBER} | tr -d '\n'", returnStdout: true)
                    HUB_PATH = "${HUB_URL}/${ORG}/${PROJECT}"
                }
            }
        }

        stage('Tag Stable Build') {
            when { branch "${STABLE_BRANCH}" }
            steps {
                script {
                    TAG = "${VER}"
                }
            }
        }

        stage('Announce Build') {
            steps {
                script {
                    slackSend color: '#00D163', channel: '#sds-ci', message: "*${PROJECT}:${TAG}* is building."
                }
            }
        }

        stage('Build') {
            failFast true
            matrix {
                agent { label 'sds-builder-v7' }
                axes {
                    axis {
                        name 'BUILD_TYPE'
                        values 'Debug', 'RelWithDebInfo'
                    }
                    axis {
                        name 'SANITIZE'
                        values 'False', 'True'
                    }
                }
                excludes {
                    exclude {
                        axis {
                            name 'SANITIZE'
                            values 'True'
                        }
                        axis {
                            name 'BUILD_TYPE'
                            values 'RelWithDebInfo'
                        }
                    } 
                }

                stages {
                    stage("Build") {
                        steps {
                            script {
                                def BUILD_OPTIONS = "-o ${PROJECT}/*:sanitize=${SANITIZE} -o sisl/*:prerelease=False -s:h build_type=${BUILD_TYPE}"
                                sh "conan create -c tools.build:skip_test=True --build missing ${BUILD_OPTIONS} ."
                            }
                        }
                    }
                    stage("Deploy Runnable") {
                        when {
                            allOf {
                                anyOf {
                                    branch "${DEV_BRANCH}"
                                    branch "${STABLE_BRANCH}"
                                }
                                expression { "${SANITIZE}" == 'False' }
                            }
                        }
                        steps {
                            script {
                                sh "echo BUILD_TYPE: ${BUILD_TYPE}, BUILD_TYPE: ${BUILD_TYPE}"
                                slackSend color: '#F3AD03', channel: '#sds-ci', message: "*${PROJECT}:${TAG}-${BUILD_TYPE}* is being deployed to Tess.IO"
                                sh "conan remote login -p ${ARTIFACTORY_PASS} ebay-local _service_sds"
                                sh "conan graph info ./ | grep 'ref: ' | awk '{print \$2}'  | sort | uniq | grep -v ${PROJECT} | grep -v '#' | while read pkg; do conan upload -r ebay-local -c \"\${pkg}\"; done"
                                sh "conan upload ${PROJECT}/${VER} -c -r ebay-local"
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        failure {
            slackSend color: '#E43237', channel: '#sds-ci', message: "*${PROJECT}:${TAG}* had a failure : ${BUILD_URL}"
        }
        success {
            slackSend color: '#85B717', channel: '#sds-ci', message: "*${PROJECT}:${TAG}* has completed successfully."
        }
    }
}
